name: Test Twitter Authentication

on:
  # Allow manual trigger
  workflow_dispatch:
  # Optional: Run on pull requests to catch credential issues early
  pull_request:
    branches: [ main ]
  # Optional: Run periodically to ensure credentials remain valid
  schedule:
    - cron: '0 0 * * 1'  # Runs weekly on Monday at 00:00 UTC

jobs:
  test-auth:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tweepy
    
    - name: Create auth test script
      run: |
        cat > test_auth.py << 'EOL'
        import tweepy
        import os
        
        # Get credentials from environment variables
        api_key = os.environ['API_KEY']
        api_secret = os.environ['API_SECRET_KEY']
        access_token = os.environ['ACCESS_TOKEN']
        access_token_secret = os.environ['ACCESS_TOKEN_SECRET']
        
        # Initialize tweepy client
        client = tweepy.Client(
            consumer_key=api_key,
            consumer_secret=api_secret,
            access_token=access_token,
            access_token_secret=access_token_secret
        )
        
        # Test authentication
        try:
            # Try to get your own user info
            me = client.get_me()
            print("Authentication successful!")
            print(f"Connected as: {me.data.username}")
            exit(0)  # Success exit code
        except tweepy.TweepyException as e:
            print(f"Authentication failed: {str(e)}")
            exit(1)  # Failure exit code
        EOL
    
    - name: Test Twitter authentication
      env:
        API_KEY: ${{ secrets.API_KEY }}
        API_SECRET_KEY: ${{ secrets.API_SECRET_KEY }}
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      run: python test_auth.py
